{"version":3,"file":"static/js/930.f7452077.chunk.js","mappings":"qNAoEA,EA/DsB,WAClB,IAAMA,EAAiBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,mBACvDC,GAAaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAA5CH,UAEDI,GAAWC,EAAAA,EAAAA,MAEVC,EAAuCZ,EAAvCY,GAAIC,EAAmCb,EAAnCa,KAAMC,EAA6Bd,EAA7Bc,MAAOC,EAAsBf,EAAtBe,YAAaC,EAAShB,EAATgB,MAErCC,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,IAEtBI,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,CAAClB,IAEJ,IAkBMkB,EAAW,WACTlB,EAAUmB,OAAS,GACnBnB,EAAUoB,SAAQ,SAAAC,GACVA,EAAKf,KAAOA,GACZU,GAAS,EAEjB,GAER,EAEA,OACIM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAKjB,KACLe,EAAAA,EAAAA,MAAA,OAAKI,UAAU,gBAAeF,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKE,IAAG,MAAAC,OAAQpB,GAASqB,IAAKtB,KAC9Be,EAAAA,EAAAA,MAAA,OAAKI,UAAU,cAAaF,SAAA,EACxBC,EAAAA,EAAAA,KAAA,QAAAD,SAAOf,KACPa,EAAAA,EAAAA,MAAA,OAAKI,UAAU,UAASF,SAAA,EACpBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAKd,EAAM,OAEPK,GACAU,EAAAA,EAAAA,KAAA,UAAQC,UAAU,QAAOF,SAAC,WAC1BC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,cAAcI,QA7BpC,WAChB,IAAMT,EAXC,CACHf,GAAAA,EACAC,KAAAA,EACAC,MAAAA,EACAC,YAAAA,EACAC,MAAAA,EACAqB,OAAQ,GAMZ3B,GAAS4B,EAAAA,EAAAA,IAAoB,IAC7B5B,GAAS6B,EAAAA,EAAAA,IAAmBvB,IAC5BN,GAAS8B,EAAAA,EAAAA,IAAQb,GACrB,EAwB6EG,SAAC,2BAOlF,EC7CA,EArBwB,WACpB,IAQMW,EARoBxC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,mBAA1DqC,gBAGoBC,KAAI,SAAAhB,GACvB,OAAOC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAqBC,EAAAA,EAAAA,KAAA,QAAAD,SAAOH,EAAKd,QAAYkB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMF,SAAEH,EAAKiB,UAAhEjB,EAAKd,KAC1B,IAKJ,OACIe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBF,SAC3BW,MAIjB,ECLA,EATuB,WACnB,OACIb,EAAAA,EAAAA,MAAA,QAAMI,UAAU,wBAAuBF,SAAA,EACnCC,EAAAA,EAAAA,KAACc,EAAa,KACdd,EAAAA,EAAAA,KAACe,EAAe,MAG5B,C","sources":["components/singleProduct/SingleProduct.js","components/characteristics/Characteristics.js","pages/singleItemPage/SingleItemPage.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { increaseTotalAmount, increaseTotalPrice, addItem } from \"../../slices/cartSlice\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst SingleProduct = () => {\r\n    const currentProduct = JSON.parse(window.localStorage.getItem('currentProduct'));\r\n    const {cartItems} = useSelector(state => state.cart);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {id, name, image, description, price} = currentProduct;\r\n\r\n    const [added, setAdded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        isInCart();\r\n    }, [cartItems]);\r\n\r\n    const createCartObj = () => {\r\n        return {\r\n            id,\r\n            name,\r\n            image,\r\n            description,\r\n            price,\r\n            amount: 1\r\n        }\r\n    }\r\n\r\n    const onAddToCart = () => {\r\n        const item = createCartObj();\r\n        dispatch(increaseTotalAmount(1));\r\n        dispatch(increaseTotalPrice(price));\r\n        dispatch(addItem(item));\r\n    }\r\n\r\n    const isInCart = () => {\r\n        if (cartItems.length > 0) {\r\n            cartItems.forEach(item => {\r\n                if (item.id === id) {\r\n                    setAdded(true);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>{name}</h2>\r\n            <div className=\"img_and_descr\">\r\n                <img src={`../${image}`} alt={name}></img>\r\n                <div className=\"description\">\r\n                    <span>{description}</span>\r\n                    <div className=\"wrapper\">\r\n                        <h2>{price}$</h2>\r\n                        {\r\n                            added ?\r\n                            <button className=\"added\">added</button> :\r\n                            <button className=\"add_to_cart\" onClick={onAddToCart}>add to cart</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SingleProduct;","const Characteristics = () => {\r\n    const {characteristics} = JSON.parse(window.localStorage.getItem('currentProduct'));\r\n\r\n    const renderCharacteristics = () => {\r\n        return characteristics.map(item => {\r\n            return <div key={item.name}><span>{item.name}</span><span className=\"bold\">{item.value}</span></div>\r\n        });\r\n    }\r\n\r\n    const elements = renderCharacteristics();\r\n\r\n    return (\r\n        <>\r\n            <h3>Characteristics</h3>\r\n            <div className=\"characteristics\">\r\n                {elements}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Characteristics;","import SingleProduct from '../../components/singleProduct/SingleProduct';\r\nimport Characteristics from '../../components/characteristics/Characteristics';\r\n\r\nimport './singleItemPage.css';\r\n\r\nconst SingleItemPage = () => {\r\n    return (\r\n        <main className='single_item_page_main'>\r\n            <SingleProduct/>\r\n            <Characteristics/>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default SingleItemPage;"],"names":["currentProduct","JSON","parse","window","localStorage","getItem","cartItems","useSelector","state","cart","dispatch","useDispatch","id","name","image","description","price","_useState","useState","_useState2","_slicedToArray","added","setAdded","useEffect","isInCart","length","forEach","item","_jsxs","_Fragment","children","_jsx","className","src","concat","alt","onClick","amount","increaseTotalAmount","increaseTotalPrice","addItem","elements","characteristics","map","value","SingleProduct","Characteristics"],"sourceRoot":""}